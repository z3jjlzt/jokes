<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">
    <!--作用是隐式向spring容器注册4个BeanPostProcessor，用以提供在程序中使用注解 @Required,@Autowired等等,
    在使用了component-scan后可以移除-->
    <!--<context:annotation-config/>-->

    <!--与annotation-config类似，它是开启springmvc的注解如@controller，@RequestMapping等等-->
    <mvc:annotation-driven/>
    <!--自动扫描指定包下的Bean类
    同时还启用了注释驱动自动注入的功能
    即还隐式地在内部注册了 AutowiredAnnotationBeanPostProcessor 和 CommonAnnotationBeanPostProcessor），
    因此当使用 <context:component-scan/> 后，就可以将 <context:annotation-config/> 移除了
    在springmvc-context中只需要扫描所有带@Controller注解的类，在applicationcontext中扫描其他注解的类
    -->
    <context:component-scan base-package="com.kkk.controller"/>

    <!--静态资源使用springmvc处理，-->
    <mvc:resources mapping="/content/**" location="/content/"/>

    <!--jsp解析-->
    <bean id="resolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
        <property name="prefix" value="/WEB-INF/views/"/>
        <property name="suffix" value=".jsp"/>
    </bean>

    <!--校验器整合springmvc-->
    <bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
        <property name="providerClass" value="org.hibernate.validator.HibernateValidator"/>
    </bean>

    <!--使用fastjson替代默认jackson消息解析器-->
    <mvc:annotation-driven validator="validator">
        <mvc:message-converters>
            <bean class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter"/>
        </mvc:message-converters>
    </mvc:annotation-driven>

    <!--启用aop-->
    <!--记住，如果项目用了 spring MVC，一定要把 AOP 的相关配置移动到 MVC 配置文件哦O(∩_∩)O~-->
    <aop:aspectj-autoproxy />


</beans>