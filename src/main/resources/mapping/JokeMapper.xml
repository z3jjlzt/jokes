<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kkk.mapper.JokeMapper">
  <resultMap id="BaseResultMap" type="com.kkk.bean.Joke">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="author" jdbcType="VARCHAR" property="author" />
    <result column="atype" jdbcType="TINYINT" property="atype" />
    <result column="atag" jdbcType="VARCHAR" property="atag" />
    <result column="cdate" jdbcType="DATE" property="cdate" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.kkk.bean.Joke">
    <result column="article" jdbcType="LONGVARCHAR" property="article" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, author, atype, atag, cdate
  </sql>
  <sql id="Blob_Column_List">
    article
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.kkk.bean.JokeExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from joke
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.kkk.bean.JokeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from joke
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from joke
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from joke
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.kkk.bean.JokeExample">
    delete from joke
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.kkk.bean.Joke">
    insert into joke (id, author, atype, 
      atag, cdate, article
      )
    values (#{id,jdbcType=INTEGER}, #{author,jdbcType=VARCHAR}, #{atype,jdbcType=TINYINT}, 
      #{atag,jdbcType=VARCHAR}, #{cdate,jdbcType=DATE}, #{article,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.kkk.bean.Joke">
    insert into joke
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="author != null">
        author,
      </if>
      <if test="atype != null">
        atype,
      </if>
      <if test="atag != null">
        atag,
      </if>
      <if test="cdate != null">
        cdate,
      </if>
      <if test="article != null">
        article,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="author != null">
        #{author,jdbcType=VARCHAR},
      </if>
      <if test="atype != null">
        #{atype,jdbcType=TINYINT},
      </if>
      <if test="atag != null">
        #{atag,jdbcType=VARCHAR},
      </if>
      <if test="cdate != null">
        #{cdate,jdbcType=DATE},
      </if>
      <if test="article != null">
        #{article,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.kkk.bean.JokeExample" resultType="java.lang.Long">
    select count(*) from joke
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update joke
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.author != null">
        author = #{record.author,jdbcType=VARCHAR},
      </if>
      <if test="record.atype != null">
        atype = #{record.atype,jdbcType=TINYINT},
      </if>
      <if test="record.atag != null">
        atag = #{record.atag,jdbcType=VARCHAR},
      </if>
      <if test="record.cdate != null">
        cdate = #{record.cdate,jdbcType=DATE},
      </if>
      <if test="record.article != null">
        article = #{record.article,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update joke
    set id = #{record.id,jdbcType=INTEGER},
      author = #{record.author,jdbcType=VARCHAR},
      atype = #{record.atype,jdbcType=TINYINT},
      atag = #{record.atag,jdbcType=VARCHAR},
      cdate = #{record.cdate,jdbcType=DATE},
      article = #{record.article,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update joke
    set id = #{record.id,jdbcType=INTEGER},
      author = #{record.author,jdbcType=VARCHAR},
      atype = #{record.atype,jdbcType=TINYINT},
      atag = #{record.atag,jdbcType=VARCHAR},
      cdate = #{record.cdate,jdbcType=DATE}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.kkk.bean.Joke">
    update joke
    <set>
      <if test="author != null">
        author = #{author,jdbcType=VARCHAR},
      </if>
      <if test="atype != null">
        atype = #{atype,jdbcType=TINYINT},
      </if>
      <if test="atag != null">
        atag = #{atag,jdbcType=VARCHAR},
      </if>
      <if test="cdate != null">
        cdate = #{cdate,jdbcType=DATE},
      </if>
      <if test="article != null">
        article = #{article,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.kkk.bean.Joke">
    update joke
    set author = #{author,jdbcType=VARCHAR},
      atype = #{atype,jdbcType=TINYINT},
      atag = #{atag,jdbcType=VARCHAR},
      cdate = #{cdate,jdbcType=DATE},
      article = #{article,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.kkk.bean.Joke">
    update joke
    set author = #{author,jdbcType=VARCHAR},
      atype = #{atype,jdbcType=TINYINT},
      atag = #{atag,jdbcType=VARCHAR},
      cdate = #{cdate,jdbcType=DATE}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>